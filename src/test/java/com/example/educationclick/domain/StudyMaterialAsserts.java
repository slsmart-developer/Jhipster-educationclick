package com.example.educationclick.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StudyMaterialAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudyMaterialAllPropertiesEquals(StudyMaterial expected, StudyMaterial actual) {
        assertStudyMaterialAutoGeneratedPropertiesEquals(expected, actual);
        assertStudyMaterialAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudyMaterialAllUpdatablePropertiesEquals(StudyMaterial expected, StudyMaterial actual) {
        assertStudyMaterialUpdatableFieldsEquals(expected, actual);
        assertStudyMaterialUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudyMaterialAutoGeneratedPropertiesEquals(StudyMaterial expected, StudyMaterial actual) {
        assertThat(expected)
            .as("Verify StudyMaterial auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudyMaterialUpdatableFieldsEquals(StudyMaterial expected, StudyMaterial actual) {
        assertThat(expected)
            .as("Verify StudyMaterial relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getFile()).as("check file").isEqualTo(actual.getFile()))
            .satisfies(e -> assertThat(e.getFileContentType()).as("check file contenty type").isEqualTo(actual.getFileContentType()))
            .satisfies(e -> assertThat(e.getUploadDate()).as("check uploadDate").isEqualTo(actual.getUploadDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudyMaterialUpdatableRelationshipsEquals(StudyMaterial expected, StudyMaterial actual) {
        assertThat(expected)
            .as("Verify StudyMaterial relationships")
            .satisfies(e -> assertThat(e.getTeacher()).as("check teacher").isEqualTo(actual.getTeacher()));
    }
}
